/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package infirmayregister;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.Statement;
import java.awt.event.KeyEvent;
import java.sql.DriverManager;
import java.sql.ResultSet;

/**
 *
 * @author Arjun Kothakota
 */
public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
        this.setSize(680, 583);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jOptionPane1 = new javax.swing.JOptionPane();
        passwordTF = new javax.swing.JPasswordField();
        usernameTF = new javax.swing.JTextField();
        loginLbl = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1023, 768));
        setMinimumSize(new java.awt.Dimension(1023, 768));
        setPreferredSize(new java.awt.Dimension(1023, 768));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        passwordTF.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        passwordTF.setBorder(null);
        passwordTF.setOpaque(false);
        passwordTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passwordTFKeyPressed(evt);
            }
        });
        getContentPane().add(passwordTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 390, 280, 30));

        usernameTF.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        usernameTF.setBorder(null);
        usernameTF.setOpaque(false);
        usernameTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameTFActionPerformed(evt);
            }
        });
        getContentPane().add(usernameTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 320, 280, 30));

        loginLbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        loginLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                loginLblMouseReleased(evt);
            }
        });
        getContentPane().add(loginLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 650, 240, 50));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/arjun/images/Login layout.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void loginLblMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginLblMouseReleased
        String PWord = passwordTF.getText();
        String ID = usernameTF.getText();
        String str = null;
        Statement stmt=null;
        ResultSet rs = null;
            
        try {
            
            Class.forName("java.sql.Driver");
            String database = "jdbc:mysql://localhost:3306/infirmary";
            Connection conn = (Connection) DriverManager.getConnection(database, "root", "arjun");
            stmt = (Statement) conn.createStatement();
            String sql = "select * from login where userName = '" + ID + "'";
            rs = stmt.executeQuery(sql);
            rs.next();
            str = rs.getString("password");
            
            if(str.equals(PWord)) {
                StudentLogin studentLoginFrame=new StudentLogin();
                studentLoginFrame.setVisible(true);
                this.dispose();
                } else {
                
                jOptionPane1.showMessageDialog(rootPane,"Invalid Username/Password");
            }
            
            rs.close();
            stmt.close();
            conn.close();
      
        } catch (Exception e) {
            
            if (usernameTF.getText() == "" || passwordTF.getText() == "" ) {
                jOptionPane1.showMessageDialog(rootPane ,"Please enter a Username/Password");
                
            }else {
                jOptionPane1.showMessageDialog(rootPane ,"Invalid Username/Password");
            }     
           
            
            passwordTF.setText("");
            usernameTF.setText("");
            usernameTF.requestFocus();
            
        }
    }//GEN-LAST:event_loginLblMouseReleased

    private void passwordTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordTFKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
        
            String PWord = passwordTF.getText();
        String ID = usernameTF.getText();
        String str = null;
        Statement stmt=null;
        ResultSet rs = null;
            
        try {
            
            Class.forName("java.sql.Driver");
            String database = "jdbc:mysql://localhost:3306/infirmary";
            Connection conn = (Connection) DriverManager.getConnection(database, "root", "arjun");
            stmt = (Statement) conn.createStatement();
            String sql = "select * from login where userName = '" + ID + "'";
            rs = stmt.executeQuery(sql);
            rs.next();
            str = rs.getString("password");
            
            if(str.equals(PWord)) {
                StudentLogin studentLoginFrame=new StudentLogin();
                studentLoginFrame.setVisible(true);
                this.dispose();
                } else {
                
                jOptionPane1.showMessageDialog(rootPane,"Invalid Username/Password");
            }
            
            rs.close();
            stmt.close();
            conn.close();
      
        } catch (Exception e) {
            
            if (usernameTF.equals("") || passwordTF.equals("")) {
                jOptionPane1.showMessageDialog(rootPane ,"Please enter a Username/Password");
            } else {
                jOptionPane1.showMessageDialog(rootPane ,"Invalid Username/Password");
            }               
            
            passwordTF.setText("");
            usernameTF.setText("");
            usernameTF.requestFocus();
            
        }
        
        }
    }//GEN-LAST:event_passwordTFKeyPressed

    private void usernameTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameTFActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {                                     
    }      
    /**
     * @param args the command line arguments
     */
     public static void main(String args[]){
         
          try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
         java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                  try{
                
                    Thread.sleep(4500);
                    
                }catch(Exception e){
                
                }
                
                new Login().setVisible(true);
            }
        });
     }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JOptionPane jOptionPane1;
    private javax.swing.JLabel loginLbl;
    private javax.swing.JPasswordField passwordTF;
    private javax.swing.JTextField usernameTF;
    // End of variables declaration//GEN-END:variables
}
